# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

jobs:
  - job: compile_on_windows
    pool:
      vmImage: 'windows-latest'

    variables:
      buildConfiguration: 'Release'

    steps:

    - task: GitVersion@4
      displayName: 'Generate a version number using GitVersion'
      inputs:
        updateAssemblyInfo: true

    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet 4.4.1'
      inputs:
        versionSpec: 4.4.1
        checkLatest: true

    - task: MSBuild@1
      displayName: 'Build dotnet core application using MSBuild on Windows'
      inputs:
        msbuildLocationMethod: version
        msbuildVersion: latest
        msbuildArchitecture: x86
        msbuildArguments: /r /p:Configuration=$(buildConfiguration) /p:OutputPath=app /p:Version=$(GitVersion.InformationalVersion) /p:AssemblyVersion=$(GitVersion.AssemblySemVer) /p:FileVersion=$(GitVersion.MajorMinorPatch) /t:Publish /detailedsummary /m:16 /bl:$(build.artifactstagingdirectory)\build.binlog
        clean: false
        maximumCpuCount: true
        restoreNugetPackages: false
        logProjectEvents: false
        createLogFile: false

    - task: CopyFiles@2
      displayName: 'Copy compiled file into artifacts'
      inputs:
        SourceFolder: 'Zigbee2MqttAssistant/apppublish'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/app'

    - task: CmdLine@2
      displayName: 'Create a script file to restore version number on during release management'
      inputs:
        script: |
          echo ##vso[task.setvariable variable=GitVersion.SemVer]$(GitVersion.SemVer)>> "$(Build.ArtifactStagingDirectory)/restore-version.txt"

    - task: PublishBuildArtifacts@1
      condition: always()
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'Application'
        ArtifactType: Container

# List of microsoft dotnet core images: https://hub.docker.com/_/microsoft-dotnet-core-runtime/  (for "imageTag")

  - template: azure-pipelines.buildimage.yaml
    parameters:
      target: linux-x64
      vmImage: 'ubuntu-latest'
      imageTag: '3.1-alpine'
      osTag: 'amd64'

  - template: azure-pipelines.buildimage.yaml
    parameters:
      target: linux-arm32
      vmImage: 'ubuntu-latest'
      imageTag: '3.1-buster-slim-arm32v7'
      osTag: 'armv7'

  - template: azure-pipelines.buildimage.yaml
    parameters:
      target: linux-arm64
      vmImage: 'ubuntu-latest'
      imageTag: '3.1-alpine-arm64v8'
      osTag: 'aarch64'

  - template: azure-pipelines.buildimage.yaml
    parameters:
      target: win-64
      vmImage: 'windows-2019' # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
      imageTag: '3.1-nanoserver-1809'
      osTag: 'win64'

  - template: azure-pipelines.buildimage.yaml
    parameters:
      target: win-arm32
      vmImage: 'windows-2019' # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
      imageTag: '3.1-nanoserver-1809-arm32v7'
      osTag: 'winarm32'
